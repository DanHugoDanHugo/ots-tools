#!/bin/sh

# sheet-view: quickly display or filter a spreadsheet on the command line
#
# Copyright (c) 2018 Open Tech Strategies, LLC
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# If you did not receive a copy of the GNU General Public License
# along with this program, see <http://www.gnu.org/licenses/>.

usage() {
  echo "Print a spreadsheet's rows (optionally filtering) on the terminal."
  echo "Usage:"
  echo ""
  echo '   $ sheet-view SPREADSHEET [PATTERN]'
  echo ""
  echo "If PATTERN is absent, print all rows.  If PATTERN is present,"
  echo "print just the rows in which any cell matches PATTERN."
  echo ""
}

MISSING_DEP="no"

if [ "`which xlsx2csv`"x = "x" ]; then
  echo "ERROR: You need to have xlsx2csv installed."
  echo "       You can do 'pip3 install xlsx2csv' or get it"
  echo "       from https://github.com/dilshod/xlsx2csv."
  echo ""
  # Some other choices for XLSX-to-CSV conversion are:
  # 
  #   - github.com/staale/py-xlsx
  #   - github.com/leegao/pyXLSX
  #   - https://bitbucket.org/ericgazoni/openpyxl/ 
  # 
  # (For that last one, note that BitBucket now apparently requires
  # you to log in to access even public projects, so use the clone
  # repository at https://github.com/ericgazoni/openpyxl instead.)
  MISSING_DEP="yes"
fi

if [ "`which csv-scope`"x = "x" ]; then
  echo "ERROR: You need to have csv-scope installed; see"
  echo "       github.com/OpenTechStrategies/ots-tools."
  echo ""
  MISSING_DEP="yes"
fi

if [ "${MISSING_DEP}" = "yes" ]; then
  exit 1
fi

SPREADSHEET="${1}"
PATTERN="${2}"

if [ "${SPREADSHEET}x" = "x" ]; then
  echo "ERROR: spreadsheet argument required."
  echo ""
  usage
  exit 1
fi

xlsx2csv "${SPREADSHEET}" > /tmp/sheet-view-$$
# If ${PATTERN} is the empty string, that works out fine.
csv-scope /tmp/sheet-view-$$ | dmgrep -d "=================" "${PATTERN}"
rm /tmp/sheet-view-$$
