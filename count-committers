#!/bin/sh

# Copyright (c) 2015 Karl Fogel.  Released under MIT open source license:
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Run this from inside a git-controlled directory to get a list of
# committers sorted by commit count.  Any arguments are simply passed
# to 'git log' (e.g., --since, etc).
# 
# WARNING: Do not use this to figure out who has "done the most" in a
# project.  Commit counts are approximations at best.  For example,
# someone who writes a lot of bugs and then has to do lots of followup
# commits to fix them would have a higher count than someone who has
# contributed just as much but tends to get it right the first time.
# Also, the number of commits doesn't say anything about the size of
# those commits (and the size of a commit doesn't necessarily say
# anything about its quality or usefulness).  In short: be careful.

TMP_FILE=$$-count-committers.tmp

if [ -d .git ]; then
  git log $@ | grep -E "^Author: " > ${TMP_FILE}
elif [ -d .svn ]; then
  # Create or update a local log message cache first.
  echo "Updating local SVN log cache first..."
  ### NOTE: You may need to adjust the path to 'logup' below.
  ###       It is distributed alongside this script.
  logup
  echo "Done."
  echo ""
  grep -E "^r[0-9]+ \| [-a-zA-Z0-9]+ \| " logv.out | cut -d " " -f 3 \
    > ${TMP_FILE}
else
  echo "ERROR: This is not the top of a Git or Subversion checkout."
fi

TOTAL_COUNT=`wc -l ${TMP_FILE} | cut -d' ' -f 1`
echo "${TOTAL_COUNT} commits:"
echo "--------------"

sed -e 's/<[^@]*@[^@]*>//g' < ${TMP_FILE} > ${TMP_FILE}-tmp
mv ${TMP_FILE}-tmp ${TMP_FILE}

sed -e 's/^Author: //g' < ${TMP_FILE} > ${TMP_FILE}-tmp
mv ${TMP_FILE}-tmp ${TMP_FILE}

sort ${TMP_FILE} | uniq --count > ${TMP_FILE}-tmp
mv ${TMP_FILE}-tmp ${TMP_FILE}

sort -r -h ${TMP_FILE}

rm ${TMP_FILE}

# If you've got a normalized file of commit counts and authors,
# you could also just use this command:
# sort authors.txt | uniq -c | sort -nr
